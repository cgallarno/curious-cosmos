{"ast":null,"code":"import{useState}from'react';// Import useState hook\nimport'./App.css';import YoutubeEmbed from\"./components/YoutubeEmbed.js\";// Import the YoutubeEmbed component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Use state to store the video URLs\nconst[firstVideoUrl,setFirstVideoUrl]=useState(\"\");const[secondVideoUrl,setSecondVideoUrl]=useState(\"\");const[firstVideoTimestamp,setFirstVideoTimestamp]=useState(0.00);// Function to extract the video ID from a full YouTube URL\nconst extractVideoId=url=>{const regex=/(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|embed|shorts)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;const match=url.match(regex);return match?match[1]:\"\";};const setTimestamps=()=>{setFirstVideoTimestamp(100);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add your YouTube video URLs!\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter first YouTube video URL\",onChange:e=>setFirstVideoUrl(extractVideoId(e.target.value))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter second YouTube video URL\",onChange:e=>setSecondVideoUrl(extractVideoId(e.target.value))}),/*#__PURE__*/_jsxs(\"div\",{className:\"video-container\",children:[/*#__PURE__*/_jsx(YoutubeEmbed,{embedId:firstVideoUrl,timestamp:firstVideoTimestamp}),/*#__PURE__*/_jsx(YoutubeEmbed,{embedId:secondVideoUrl})]}),/*#__PURE__*/_jsx(\"button\",{onClick:setTimestamps,children:\"Set Time\"})]});}export default App;","map":{"version":3,"names":["useState","YoutubeEmbed","jsx","_jsx","jsxs","_jsxs","App","firstVideoUrl","setFirstVideoUrl","secondVideoUrl","setSecondVideoUrl","firstVideoTimestamp","setFirstVideoTimestamp","extractVideoId","url","regex","match","setTimestamps","className","children","type","placeholder","onChange","e","target","value","embedId","timestamp","onClick"],"sources":["/home/distantanswer/Projects/curious-cosmos/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react'; // Import useState hook\nimport './App.css';\nimport YoutubeEmbed from \"./components/YoutubeEmbed.js\"; // Import the YoutubeEmbed component\n\nfunction App() {\n  // Use state to store the video URLs\n  const [firstVideoUrl, setFirstVideoUrl] = useState(\"\");\n  const [secondVideoUrl, setSecondVideoUrl] = useState(\"\");\n  const [firstVideoTimestamp, setFirstVideoTimestamp] = useState(0.00);\n\n\n  // Function to extract the video ID from a full YouTube URL\n  const extractVideoId = (url) => {\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|embed|shorts)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : \"\";\n  };\n\n  const setTimestamps = () => {\n    setFirstVideoTimestamp(100);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add your YouTube video URLs!</h1>\n      \n      {/* First Input */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter first YouTube video URL\"\n        onChange={(e) => setFirstVideoUrl(extractVideoId(e.target.value))}\n      />\n      \n      {/* Second Input */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter second YouTube video URL\"\n        onChange={(e) => setSecondVideoUrl(extractVideoId(e.target.value))}\n      />\n      \n      {/* Embed components for both videos */}\n      <div className=\"video-container\">\n        <YoutubeEmbed embedId={firstVideoUrl} timestamp={firstVideoTimestamp} />\n        <YoutubeEmbed embedId={secondVideoUrl} />\n      </div>\n\n      <button onClick={setTimestamps}>Set Time</button>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAAE;AAClC,MAAO,WAAW,CAClB,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACS,cAAc,CAAEC,iBAAiB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACW,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAGpE;AACA,KAAM,CAAAa,cAAc,CAAIC,GAAG,EAAK,CAC9B,KAAM,CAAAC,KAAK,CAAG,kIAAkI,CAChJ,KAAM,CAAAC,KAAK,CAAGF,GAAG,CAACE,KAAK,CAACD,KAAK,CAAC,CAC9B,MAAO,CAAAC,KAAK,CAAGA,KAAK,CAAC,CAAC,CAAC,CAAG,EAAE,CAC9B,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1BL,sBAAsB,CAAC,GAAG,CAAC,CAC7B,CAAC,CAED,mBACEP,KAAA,QAAKa,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBhB,IAAA,OAAAgB,QAAA,CAAI,8BAA4B,CAAI,CAAC,cAGrChB,IAAA,UACEiB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,+BAA+B,CAC3CC,QAAQ,CAAGC,CAAC,EAAKf,gBAAgB,CAACK,cAAc,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAE,CACnE,CAAC,cAGFtB,IAAA,UACEiB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,gCAAgC,CAC5CC,QAAQ,CAAGC,CAAC,EAAKb,iBAAiB,CAACG,cAAc,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAE,CACpE,CAAC,cAGFpB,KAAA,QAAKa,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhB,IAAA,CAACF,YAAY,EAACyB,OAAO,CAAEnB,aAAc,CAACoB,SAAS,CAAEhB,mBAAoB,CAAE,CAAC,cACxER,IAAA,CAACF,YAAY,EAACyB,OAAO,CAAEjB,cAAe,CAAE,CAAC,EACtC,CAAC,cAENN,IAAA,WAAQyB,OAAO,CAAEX,aAAc,CAAAE,QAAA,CAAC,UAAQ,CAAQ,CAAC,EAC9C,CAAC,CAEV,CAEA,cAAe,CAAAb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}