{"ast":null,"code":"import{useEffect,useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function YoutubeEmbed(_ref){let{embedId,timestamp}=_ref;const playerRef=useRef(null);const[player,setPlayer]=useState(null);const[prevTimestamp,_]=useState(timestamp);useEffect(()=>{console.log('useEffect',window.YT);if(window.YT&&window.YT.Player){const newPlayer=new window.YT.Player(playerRef.current,{height:'390',width:'640',videoId:embedId,events:{onReady:event=>{console.log(\"Player is ready!\");}}});setPlayer(newPlayer);}else{console.error('YT api or Player not available');}},[embedId]);if(timestamp!==prevTimestamp&&player){player.seekTo(timestamp,true);}else{console.error('no player to seek to');}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My YouTube Player\"}),/*#__PURE__*/_jsx(\"div\",{ref:playerRef})]});}export default YoutubeEmbed;","map":{"version":3,"names":["useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","YoutubeEmbed","_ref","embedId","timestamp","playerRef","player","setPlayer","prevTimestamp","_","console","log","window","YT","Player","newPlayer","current","height","width","videoId","events","onReady","event","error","seekTo","children","ref"],"sources":["/home/distantanswer/Projects/curious-cosmos/frontend/src/components/YoutubeEmbed.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nfunction YoutubeEmbed({embedId, timestamp}) {\n  const playerRef = useRef(null);\n  const [player, setPlayer] = useState(null);\n  const [prevTimestamp, _] = useState(timestamp);\n  useEffect(() => {\n    console.log('useEffect', window.YT);\n    if (window.YT && window.YT.Player) {\n      const newPlayer = new window.YT.Player(playerRef.current, {\n        height: '390',\n        width: '640',\n        videoId: embedId,\n        events: {\n          onReady: (event) => {\n            console.log(\"Player is ready!\");\n          },\n        },\n      });\n      setPlayer(newPlayer);\n    }else{\n      console.error('YT api or Player not available')\n    }\n  }, [embedId]);\n\n  if(timestamp !== prevTimestamp && player){\n      player.seekTo(timestamp, true)\n  }else{\n     console.error('no player to seek to')\n  }\n  return (\n    <div>\n      <h1>My YouTube Player</h1>\n      <div ref={playerRef}></div>\n    </div>\n  );\n}\n\nexport default YoutubeEmbed;\n\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAuB,IAAtB,CAACC,OAAO,CAAEC,SAAS,CAAC,CAAAF,IAAA,CACxC,KAAM,CAAAG,SAAS,CAAGV,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACY,aAAa,CAAEC,CAAC,CAAC,CAAGb,QAAQ,CAACQ,SAAS,CAAC,CAC9CV,SAAS,CAAC,IAAM,CACdgB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAEC,MAAM,CAACC,EAAE,CAAC,CACnC,GAAID,MAAM,CAACC,EAAE,EAAID,MAAM,CAACC,EAAE,CAACC,MAAM,CAAE,CACjC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAH,MAAM,CAACC,EAAE,CAACC,MAAM,CAACT,SAAS,CAACW,OAAO,CAAE,CACxDC,MAAM,CAAE,KAAK,CACbC,KAAK,CAAE,KAAK,CACZC,OAAO,CAAEhB,OAAO,CAChBiB,MAAM,CAAE,CACNC,OAAO,CAAGC,KAAK,EAAK,CAClBZ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CACjC,CACF,CACF,CAAC,CAAC,CACFJ,SAAS,CAACQ,SAAS,CAAC,CACtB,CAAC,IAAI,CACHL,OAAO,CAACa,KAAK,CAAC,gCAAgC,CAAC,CACjD,CACF,CAAC,CAAE,CAACpB,OAAO,CAAC,CAAC,CAEb,GAAGC,SAAS,GAAKI,aAAa,EAAIF,MAAM,CAAC,CACrCA,MAAM,CAACkB,MAAM,CAACpB,SAAS,CAAE,IAAI,CAAC,CAClC,CAAC,IAAI,CACFM,OAAO,CAACa,KAAK,CAAC,sBAAsB,CAAC,CACxC,CACA,mBACEvB,KAAA,QAAAyB,QAAA,eACE3B,IAAA,OAAA2B,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1B3B,IAAA,QAAK4B,GAAG,CAAErB,SAAU,CAAM,CAAC,EACxB,CAAC,CAEV,CAEA,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}